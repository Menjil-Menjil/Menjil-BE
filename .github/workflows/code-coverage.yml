## Use codecov, and not Continuous Deployment & Delivery
name: Code Coverage in main, develop branch

on:
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # workflow 실행 전 기본적으로 checkout 필요
      # 최신 버전은 v3
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin' # jdk를 제공하는 vender사 이름 ex. zulu, adopt, microsoft

      ## Create secret yml files
      - name: create application-common.yml
        shell: bash
        run: |
          touch ./src/main/resources/application-common.yml 
          echo "${{secrets.APPLICATION_COMMON}}" > ./src/main/resources/application-common.yml

      - name: create application-local.yml
        shell: bash
        run: |
          touch ./src/main/resources/application-local.yml
          echo "${{secrets.APPLICATION_LOCAL}}" > ./src/main/resources/application-local.yml

      - name: create application-prod.yml
        shell: bash
        run: |
          touch ./src/main/resources/application-prod.yml
          echo "${{secrets.APPLICATION_PROD}}" > ./src/main/resources/application-prod.yml

      - name: create application-test.yml
        shell: bash
        run: |
          touch ./src/main/resources/application-test.yml
          echo "${{secrets.APPLICATION_TEST}}" > ./src/main/resources/application-test.yml

      ## Gradle
      - name: Cache gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean build

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/jacoco/test/jacocoTestReport.xml


#  code-coverage:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}