name: Build on PR to develop and main branch

on:
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

  # PR 코멘트 등록을 위한 write 권한
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: menjil-test
          MYSQL_ROOT_PASSWORD: root
          # MYSQL_USER: root
          # MYSQL_PASSWORD: root33
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      ## workflow 실행 전 기본적으로 checkout 필요
      ## 최신 버전은 v3
      - uses: actions/checkout@v4
      - name: Install Ubuntu dependencies
        run: sudo apt-get update

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Eclipse Temurin
          java-version: '17'

      ## Create secret yml files before build
      - name: create application-common, local, prod, test.yml
        shell: bash
        run: |
          touch ./src/main/resources/application-common.yml 
          echo "${{secrets.APPLICATION_COMMON}}" > ./src/main/resources/application-common.yml
          touch ./src/main/resources/application-local.yml
          echo "${{secrets.APPLICATION_LOCAL}}" > ./src/main/resources/application-local.yml
          touch ./src/main/resources/application-prod.yml
          echo "${{secrets.APPLICATION_PROD}}" > ./src/main/resources/application-prod.yml
          touch ./src/main/resources/application-test.yml
          echo "${{secrets.APPLICATION_TEST}}" > ./src/main/resources/application-test.yml

      ## Gradle
      - name: Cache gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Verify MySQL connection
        run: |
          sleep 30
          mysql --host 127.0.0.1 --port 3306 --user root --password=root -e "SHOW DATABASES;"

      ## Build
      - name: Build with Gradle
        run: ./gradlew clean build

      ## Codecov
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./build/reports/jacoco/test/jacocoTestReport.xml

      ## 테스트 결과 PR 코멘트에 등록
      - name: Register the test results as PR comments
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      ## 테스트 실패시 코드 라인에 대한 check comment 추가
      - name: If test fail, add check comment on failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.html'


#  code-coverage:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}